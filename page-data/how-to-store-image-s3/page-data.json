{"componentChunkName":"component---src-templates-post-jsx","path":"/how-to-store-image-s3/","result":{"data":{"site":{"siteMetadata":{"title":"괜찮을지도"}},"markdownRemark":{"id":"17b8f808-e28d-5eb8-a407-fba6191a1ea7","excerpt":"이 글은 우테코 괜찮을지도팀의 가 작성했습니다. 백엔드 크루 '매튜'와 협력해 S3에 이미지를 저장하는 작업을 진행하였습니다. 생각보다 시간도 오래 걸리고 어려움도 많았지만 많이 배웠고 보람있는 시간이었습니다. 이미지 관련 사용자 피드백 이미지를 string으로 저장하고 있어 이미지를 저장하는데 번거럽다는 피드백을 받았습니다. formData를 통해 이미…","html":"<blockquote>\n<p>이 글은 우테코 괜찮을지도팀의 <code class=\"language-text\">패트릭</code>가 작성했습니다.</p>\n</blockquote>\n<p>백엔드 크루 '매튜'와 협력해 S3에 이미지를 저장하는 작업을 진행하였습니다. 생각보다 시간도 오래 걸리고 어려움도 많았지만 많이 배웠고 보람있는 시간이었습니다.</p>\n<h3>이미지 관련 사용자 피드백</h3>\n<p>이미지를 string으로 저장하고 있어 이미지를 저장하는데 번거럽다는 피드백을 받았습니다.</p>\n<h2>formData를 통해 이미지 서버에 전송하기</h2>\n<p>file type의 Input 태그를 만듭니다.<br>\nfile을 서버로 전송하면 해당 file 데이터를 multipart/form-data형태로 받습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token operator\">&lt;</span>ImageInputButton id<span class=\"token operator\">=</span><span class=\"token string\">\"file\"</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"file\"</span> name<span class=\"token operator\">=</span><span class=\"token string\">\"image\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onHandler<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></code></pre></div>\n<p>form 데이터를 동적으로 생성하고 전송 가능한 객체인 formData를 써서 내용을 key와 value 형식으로 보내도록 했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> formData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FormData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>formImage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   formData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span> formImage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>문제 상황 : 1차 서버 에러 발생</h3>\n<p>서버 Post 요청 시 서버쪽에서 아래와 같은 에러가 발생했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 에러</span>\n<span class=\"token class-name\">Caused</span> by<span class=\"token operator\">:</span> <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>fileupload<span class=\"token punctuation\">.</span></span>FileUploadException</span><span class=\"token operator\">:</span> the request was rejected because no multipart boundary was found\nat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>fileupload<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>FileItemIteratorImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileItemIteratorImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">189</span><span class=\"token punctuation\">)</span>\nat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>fileupload<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>FileItemIteratorImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMultiPartStream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileItemIteratorImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">205</span><span class=\"token punctuation\">)</span>\nat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>fileupload<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>FileItemIteratorImpl</span><span class=\"token punctuation\">.</span><span class=\"token function\">findNextItem</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileItemIteratorImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">224</span><span class=\"token punctuation\">)</span>\nat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>fileupload<span class=\"token punctuation\">.</span>impl<span class=\"token punctuation\">.</span></span>FileItemIteratorImpl</span><span class=\"token punctuation\">.</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>init<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileItemIteratorImpl</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">142</span><span class=\"token punctuation\">)</span>\nat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>fileupload<span class=\"token punctuation\">.</span></span>FileUploadBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">getItemIterator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileUploadBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">252</span><span class=\"token punctuation\">)</span>\nat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>tomcat<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>http<span class=\"token punctuation\">.</span>fileupload<span class=\"token punctuation\">.</span></span>FileUploadBase</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FileUploadBase</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">276</span><span class=\"token punctuation\">)</span>\nat <span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>catalina<span class=\"token punctuation\">.</span>connector<span class=\"token punctuation\">.</span></span>Request</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseParts</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Request</span><span class=\"token punctuation\">.</span>java<span class=\"token operator\">:</span><span class=\"token number\">2799</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token number\">46</span> common frames omitted</code></pre></div>\n<p>에러의 원인은 boundary를 찾지 못해 나는 것이었고 formData에 파일이 있을 경우 브라우저는 자동으로 boundary를 붙여준다는 것을 알았습니다. 여기서 Post 요청을 할 때 개발자가 content-type을 multipart/form-data로 지정해주면 브라우저가 자동으로 생성한 boundary를 덮어써 버립니다. 그리고 서버는 요청 본문을 올바르게 파싱하지 못하여 파일 및 폼 데이터를 올바르게 처리하지 못합니다.<br>\n그래서 content-type을 지우면 해결이 될거라고 생각해 지웠습니다. 그러나 역시 문제는 쉽게 해결되지 않는 법! 또 다른 에러가 발생하였습니다.</p>\n<h3>문제 상황 : 2차 서버 에러 발생</h3>\n<p>json 데이터를 application/json 타입으로 명시해 주지 않아 octet-stream(8비트 단위의 이진 데이터)로 인식하여 발생한 에러였습니다. 'Blob(Binary Large Object)'을 사용하여 해결할 수 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>objectData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Blob처리로 JSON 문자열이 이진 데이터로 변환. 또한 type에 application/json을 명시</span>\n<span class=\"token keyword\">const</span> jsonBlob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> 'application<span class=\"token operator\">/</span>json' <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nformData<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>'request'<span class=\"token punctuation\">,</span> jsonBlob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이러한 과정을 통해 서버에 이미지와 데이터를 전송할 수 있었고 이를 바탕으로 S3에 이미지를 저장할 수 있었습니다!</p>","frontmatter":{"title":"백엔드와 협력해 S3에 이미지 저장하기","date":"October 18, 2023","update":"October 18, 2023","tags":["블로그"],"series":null},"fields":{"slug":"/how-to-store-image-s3/","readingTime":{"minutes":3.395}}},"seriesList":{"edges":[{"node":{"id":"9e6463d2-18de-5fdf-b4e6-8707709710e1","fields":{"slug":"/how-to-write-a-post/"},"frontmatter":{"title":"포스트 작성 방법"}}},{"node":{"id":"b802f2fe-d332-504c-be84-fd7aa170c622","fields":{"slug":"/github-actions-ci-cd/"},"frontmatter":{"title":"GitHub Actions로 CI/CD 구축하기"}}},{"node":{"id":"45b7dc00-ae71-58e4-9dc2-7aff92f0ca0d","fields":{"slug":"/trouble-shooting-actions-runner/"},"frontmatter":{"title":"EC2 환경 변수 적용 및 Actions Runner에 환경 변수 적용이 안되는 이슈"}}},{"node":{"id":"cb221d09-1977-59c9-9bc3-cd607a15d292","fields":{"slug":"/how-to-isolating-test/"},"frontmatter":{"title":"인수테스트에서 테스트 격리하기!"}}},{"node":{"id":"fa602b8b-64fa-59b0-b377-089612f91d9f","fields":{"slug":"/how-to-use-nginx/"},"frontmatter":{"title":"괜찮을지도의 Nginx 활용법"}}},{"node":{"id":"89dc33ed-1ad0-5d79-8148-b1a16f417a71","fields":{"slug":"/trouble-shooting-modifying-annotation/"},"frontmatter":{"title":"@Modifying 어노테이션의 옵션이 정상 동작하지 않는 문제"}}},{"node":{"id":"db91695e-5bf6-554c-bafd-e161d686fadf","fields":{"slug":"/trouble-shooting-fetch-type/"},"frontmatter":{"title":"FetchType.EAGER, FetchType.LAZY 에 대해서 알아보자!"}}},{"node":{"id":"2b3c31ce-d59e-50a0-92b2-7dc228aacf29","fields":{"slug":"/jpa-multibag-fetch-exception/"},"frontmatter":{"title":"Fetch join 사용 시 MultipleBagFetchException의 발생 이유와 해결 방법"}}},{"node":{"id":"253d110b-e241-549e-923a-f26782aab2dc","fields":{"slug":"/how-to-hikariCP/"},"frontmatter":{"title":"HikariCP 적용기"}}},{"node":{"id":"50f61fc3-c2e2-5599-b7e8-64879a64275d","fields":{"slug":"/trouble-shooting-jpa-delete-and-persistence/"},"frontmatter":{"title":"JPA 엔티티를 삭제할 때 영속성과 연관 관계가 중요한 이유"}}},{"node":{"id":"5a782fff-6a5b-55c2-af81-7c69e2b2ddac","fields":{"slug":"/set-or-list/"},"frontmatter":{"title":"N + 1 문제 해결 도중 맞닥뜨린 Set 과 List 의 차이"}}},{"node":{"id":"4a76962f-5c50-5617-84e6-286b77281734","fields":{"slug":"/how-to-optimize-website/"},"frontmatter":{"title":"괜찮을지도 사이트 최적화 진행"}}},{"node":{"id":"17b8f808-e28d-5eb8-a407-fba6191a1ea7","fields":{"slug":"/how-to-store-image-s3/"},"frontmatter":{"title":"백엔드와 협력해 S3에 이미지 저장하기"}}},{"node":{"id":"cae8fd6f-eff4-5fff-9917-cebb22df92ab","fields":{"slug":"/spatial-index/"},"frontmatter":{"title":"공간 인덱스 적용기"}}}]},"previous":{"fields":{"slug":"/how-to-optimize-website/"},"frontmatter":{"title":"괜찮을지도 사이트 최적화 진행"}},"next":{"fields":{"slug":"/spatial-index/"},"frontmatter":{"title":"공간 인덱스 적용기"}}},"pageContext":{"id":"17b8f808-e28d-5eb8-a407-fba6191a1ea7","series":null,"previousPostId":"4a76962f-5c50-5617-84e6-286b77281734","nextPostId":"cae8fd6f-eff4-5fff-9917-cebb22df92ab"}},"staticQueryHashes":[],"slicesMap":{}}